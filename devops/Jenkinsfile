node {
 try  {
 notify('Job Started') 
 stage('Git-Checkout') {
    git branch:'production_server', url:'https://github.com/chakri1998/devopswithmultijobs.git'
  }
	  stage('Input for deploy in production server') {            
   input('Do you want to deploy into production server proceed?')
        }
	
 def project_path="devops/"
 
 dir(project_path) {
	 
    stage('Jfrog Artifactory download'){
    def server= Artifactory.server 'Artifactory'
    def downloadSpec = """{
    "files": [
    {
      "pattern": "devops/*.war",
      "target": "artifact/"
      
    }
    ]
    }"""
    server.download(downloadSpec)
   
}
  stage('Geting Ready For Ansible') {
  sh label: 'Jenkins', script: "echo '<h1> TASK BUILD ID: ${env.BUILD_DISPLAY_NAME}</h1>' > index.html"
}  
   
   stage('Prod Deployment on AWS'){
   sh label: 'terraform', script: '/bin/terraform  init'
   sh label: 'terraform', script: '/bin/terraform  apply -input=false -auto-approve'
   }
}

notify('Job Completed')   
} catch (err) {
  notify("Error ${err}")
  currentBuild.result = 'FAILURE'
}
}

def notify(status){
    emailext (
	to: "chakradhar1998@outlook.com",
	subject: "${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
	 body: """<p>${status}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
	<p>Check console output at <a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""",
		)
	}
